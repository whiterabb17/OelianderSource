<Window
    x:Class="Oeliander.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Oeliander"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="Oeliander MikroTik Exploitation Framework"
    Width="720"
    Height="430"
    AllowsTransparency="True"
    Background="Transparent"
    MouseMove="Window_MouseMove"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">
    <Grid Margin="0,0,0,10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="107*" />
            <ColumnDefinition Width="37*" />
        </Grid.ColumnDefinitions>
        <Rectangle
            Grid.ColumnSpan="2"
            RadiusX="10px"
            RadiusY="10px">
            <Rectangle.Fill>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0.591" Color="Black" />
                    <GradientStop Offset="1" Color="White" />
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Label
            Grid.ColumnSpan="2"
            Width="688"
            Height="60"
            Margin="2,1,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Content="Oeliander (MikroTik Exploit Framework)"
            FontFamily="Papyrus"
            FontSize="36"
            Style="{StaticResource labelTitleStyle}" />
        <Label
            Grid.Column="1"
            Height="34"
            Margin="20,0,15,0"
            VerticalAlignment="Center"
            VerticalContentAlignment="Top"
            Content="DarkOracle"
            FontFamily="Papyrus"
            Style="{StaticResource labelTitleStyle}" />
        <Grid
            Grid.ColumnSpan="2"
            Height="125"
            Margin="25,56,25,0"
            VerticalAlignment="Top" />
        <Label
            Grid.Column="1"
            Width="32"
            Height="32"
            Margin="215,10,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Content="-"
            Cursor="Hand"
            MouseDoubleClick="Label_MouseDoubleClick_1"
            Style="{StaticResource labelTitleStyle}" />
        <Button
            x:Name="StartButton"
            Width="122"
            Height="28"
            Margin="36,192,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            Background="#FF404040"
            Click="Button_Click"
            Content="Start"
            Cursor="Hand"
            Foreground="White">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10" />
                </Style>
            </Button.Resources>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="Border" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#FF464646" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#FF232323" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
        <Button
            Grid.Column="1"
            Width="29"
            Height="19"
            Margin="252,16,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Background="Black"
            BorderBrush="Black"
            Click="Button_Click_2"
            Content="x"
            Foreground="White" />
        <RichTextBox
            x:Name="logRichTextBox"
            Width="420"
            Height="171"
            MinWidth="5"
            Margin="14,235,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Background="#FF404040"
            BorderBrush="Transparent"
            BorderThickness="1"
            Foreground="White"
            IsDocumentEnabled="True"
            IsReadOnly="True"
            MouseRightButtonDown="logRichTextBox_MouseRightButtonDown"
            SelectionBrush="#FFB6B1B1"
            TextChanged="logRichTextBox_TextChanged">
            <RichTextBox.ContextMenu>
                <ContextMenu>
                    <MenuItem
                        x:Name="fetchLogs"
                        Click="GetLogs"
                        Header="Check Logs" />
                    <MenuItem Click="ClearLogs" Header="Clear Logs" />
                    <MenuItem
                        x:Name="ResultButton"
                        Click="CheckResults"
                        Header="Check Results" />
                </ContextMenu>
            </RichTextBox.ContextMenu>
            <RichTextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10" />
                </Style>
            </RichTextBox.Resources>
            <FlowDocument>
                <Paragraph />
            </FlowDocument>
        </RichTextBox>
        <Label
            Height="30"
            Margin="48,68,392,0"
            Content="Target(s):"
            Style="{StaticResource labelItemStyle}" />
        <TextBox
            x:Name="ipList"
            Width="317"
            Height="24"
            Margin="118,72,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            FontSize="13px"
            MaxLines="1"
            Text=""
            TextWrapping="Wrap">
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10" />
                </Style>
            </TextBox.Resources>
        </TextBox>
        <Button
            x:Name="selectList"
            Width="82"
            Height="26"
            Margin="449,71,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            Background="#FF252525"
            Click="selectList_Click"
            Content="Select"
            Cursor="Hand"
            Foreground="White">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10" />
                </Style>
            </Button.Resources>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="Border" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#FF232323" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#FF404040" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#FF232323" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
        <Label
            Width="160"
            Height="30"
            Margin="299,108,0,0"
            HorizontalAlignment="Left"
            Content="Connection timeout"
            Style="{StaticResource labelItemStyle}" />
        <TextBox
            x:Name="timeOutTextBox"
            Width="80"
            Height="26"
            Margin="450,110,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            FontSize="15px"
            Text="0"
            TextChanged="timeOutTextBox_TextChanged"
            TextWrapping="Wrap">
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10" />
                </Style>
            </TextBox.Resources>
        </TextBox>
        <RadioButton
            x:Name="manualScan"
            Grid.Column="1"
            Width="81"
            Height="14"
            Margin="47,79,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Click="manualScan_Click"
            Content="Manual Scan"
            Foreground="White"
            IsChecked="True" />
        <RadioButton
            x:Name="shodanScan"
            Grid.Column="1"
            Width="82"
            Height="14"
            Margin="47,114,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Click="shodanScan_Click"
            Content="Shodan Scan"
            Foreground="White" />
        <Label
            Grid.ColumnSpan="2"
            Height="30"
            Margin="439,145,85,0"
            Content="Shodan Scan Target:"
            Style="{StaticResource labelItemStyle}" />
        <ComboBox
            x:Name="routerVersion"
            Grid.Column="1"
            Width="80"
            Height="22"
            Margin="50,150,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top" />
        <DataGrid
            x:Name="userGrid"
            Grid.ColumnSpan="2"
            Height="171"
            Margin="439,235,14,0"
            VerticalAlignment="Top"
            d:ItemsSource="{d:SampleData ItemCount=5}">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Click="OpenTerminalWindow" Header="Terminal Windows" />
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
        <Label
            Height="30"
            Margin="172,191,171,0"
            Content="Collected Targets"
            Style="{StaticResource labelItemStyle}" />
        <TextBox
            x:Name="targetNum"
            Width="50"
            Height="24"
            Margin="300,194,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            FontSize="15px"
            Text="0"
            TextWrapping="Wrap">
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10" />
                </Style>
            </TextBox.Resources>
        </TextBox>
        <TextBox
            x:Name="apiKey"
            Width="248"
            Height="24"
            Margin="145,147,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            FontSize="13px"
            MaxLines="1"
            Text=""
            TextChanged="apiKey_TextChanged"
            TextWrapping="Wrap">
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10" />
                </Style>
            </TextBox.Resources>
        </TextBox>
        <Label
            Height="30"
            Margin="30,144,364,0"
            Content="ShodanAPI Key:"
            Style="{StaticResource labelItemStyle}" />
        <Button
            x:Name="StartButton_Copy"
            Grid.Column="1"
            Width="28"
            Height="28"
            Margin="150,7,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            Background="#FF404040"
            Click="Button_Click_2"
            Content="X"
            Cursor="Hand"
            Foreground="White">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10" />
                </Style>
            </Button.Resources>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="Border" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#FF464646" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#FF232323" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>